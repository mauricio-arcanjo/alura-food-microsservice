spring.application.name=pagamentos-ms
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/alurafood-pagamento?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=123mudar
spring.jpa.show-sql=true

# Configurações relativas ao Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8081/eureka
# Colocando a porta =0 faz com que a porta seja gerenciada automaticamente pelo eureka
server.port=0
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

#Configurações do circuit breaker
# indica com quantas requisições que faremos uma estatística, para saber se ele pode passar para o estado aberto ou para o fechado.
# Definimos baseado nas últimas requisições que vamos considerar no momento de fazer estatística.
resilience4j.circuitbreaker.instances.atualizaPedido.slidingWindowSize: 3

#indica qual o número mínimo de chamadas que temos que fazer até o circuit breaker entrar em ação. No caso, ele vai tentar fazer a requisição uma,
# duas e na terceira vez o circuit breaker informar que o estado passou para aberto e que não será realizado mais requisições.
resilience4j.circuitbreaker.instances.atualizaPedido.minimumNumberOfCalls: 2

# é o tempo que vai ser mantido no estado de aberto, configuramos por 50 segundos, visto que o teste vai ser rápido.
# Mas você pode incluir o tempo que considerar necessário para a sua aplicação.
resilience4j.circuitbreaker.instances.atualizaPedido.waitDurationInOpenState: 50s